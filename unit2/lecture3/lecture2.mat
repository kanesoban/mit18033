% Firstly create a random 15x15 matrix A using the rand() command
A = rand(15,15);
% Now create a new variable v which is a column vector
% made from the main diagonal of A using the diag() function
v = diag(A)
% Now create a 10x10 diagonal matrix D made from the first ten elements of v. 
% Think carefully about the easiest way to do this. Remember you can create as many new variables as you want
D = diag(v(1:10))



% Firstly generate a random 10X10 matrix A using the rand() command
A = rand(10);
% Now define an upper triangular matrix X made out of the upper triangular elements of A using triu()
X = triu(A);
% Calculate the determinant of X explicity using det(). Define the value of the determinant as a variable d1
d1 = det(X)
% Finally extract the main diagonal of X as a column vector v by using the diag() command. 
% We then calculate the product of the elements of v and call this d2. You should see that d1=d2 always!
v = diag(X);
d2 = prod(v)
a = d1-d2;


% Finding eigenvalues and eigenvectors using MATLAB


% Matrix A is provided for you.
A = [1 -1 0; 2 5 1; 1 0 3];
% Now use eig(A) to find the eigenvalues and eigenvectors of A 
[V, D] = eig(A)
% Now extract the three eigenvectors of A 
% and define them as three separate column vectors v1, v2, v3
v1 = V(:, 1)
v2 = V(:, 2)
v3 = V(:, 3)
% Now extract the three correspondong eigenvalues of A 
% and define them as three separate variables e1, e2, e3. 
% These should be numbered so that A*v1 = e1*v1, etc.
e1 = D(1, 1)
e2 = D(2, 2)
e3 = D(3, 3)


% Eigenvalues of symmetric matrices


% Firstly generate a random 100x100 matrix A of numbers randomly chosen between -10 and 10.
% Note that rand() generates random numbers between 0 and 1, so we've modified the definition of A
% by first subtracting 0.5 from each entry to get randomly generated entries between -0.5 and 0.5,
% then multiplying by 20 so that the numbers lie between -10 and 10.

A = (rand(100)-0.5)*20;
% Now calculate the symmetric part of the matrix A. Call this matrix B
B = 0.5 * (A + transpose(A));
% Now calculate the eigenvalues and eigenvectors of A using eig(). Store them in the matrices V1 and D1
[V1, D1] = eig(A);
% Now calculate the eigenvalues and eigenvectors of B using eig(). Store them in the matrices V2 and D2
[V2, D2] = eig(B);
% We will now create a scatter plot of the eigenvalues of A and B from the script you have just completed.
% If you have filled it in correctly, then you should see that the eigenvalues of A are scattered across the complex plane,
% while the eigenvalues of B are all on the real line.
figure(1)
hold on
d1 = diag(D1);
plot(real(d1),imag(d1),'*')
xlabel('Real part')
ylabel('Imaginary part')
xlim([-max(abs(real(d1))), max(abs(real(d1)))])
ylim([-max(abs(imag(d1))), max(abs(imag(d1)))])
title('Eigenvalues of A')
set(gca,'FontSize', 18);
axis square
%
figure(2)
hold on
d2 = diag(D2);
plot(real(d2),imag(d2),'*')
xlabel('Real part')
ylabel('Imaginary part')
xlim([-max(abs(real(d2))), max(abs(real(d2)))])
ylim([-1, 1])
title('Eigenvalues of B')
set(gca,'FontSize', 18);
axis square


% Eigenvectors of a symmetric matrix


% Firstly generate a random 100x100 matrix A of numbers randomly chosen between -10 and 10.
% Note that rand() generates random numbers between 0 and 1, so we've modified the definition of A
% by first subtracting 0.5 from each entry to get randomly generated entries between -0.5 and 0.5,
% then multiplying by 20 so that the numbers lie between -10 and 10.

A = (rand(100)-0.5)*20;
% Now calculate the symmetric part of the matrix A. Call this matrix B
B = 0.5*(A + transpose(A));
% Now calculate the eigenvalues and eigenvectors of A using eig(). Store them in the matrices S1 and D1
[S1,D1] = eig(A);
% Now calculate the eigenvalues and eigenvectors of B using eig(). Store them in the matrices S2 and D2
[S2,D2] = eig(B);

% We will now create a scatter plot of the first eigenvector of A and B dotted with every other eigenvector
% of A and B using the script you have just completed.
% If you have filled it in correctly, then you should see that the dot product of different pairs of eigenvectors
% of A are scattered across the complex plane,
% while the dot product of one eigenvector of B with any other eigenvector of B is zero.
figure(1)
hold on
for m=2:100
    plot(real(S1(:,m)'*S1(:,1)),imag(S1(:,m)'*S1(:,1)),'b*')
end
xlabel('Real part')
ylabel('Imaginary part')
xlim([-0.5, 0.5])
ylim([-0.5, 0.5])
title('Dot products of eigenvectors of A')
figure(2)
hold on
for m=2:100
    plot(real(S2(:,m)'*S2(:,1)),imag(S2(:,m)'*S2(:,1)),'r*')
end
xlabel('Real part')
ylabel('Imaginary part')
xlim([-0.5, 0.5])
ylim([-0.5, 0.5])
title('Dot products of eigenvectors of B')



